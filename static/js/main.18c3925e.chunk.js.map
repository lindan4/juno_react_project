{"version":3,"sources":["Views/MyFavourites.module.css","Views/Main.module.css","Views/ErrorPage.module.css","api/Meal.js","Components/RandomRecipeItem.js","Components/RecipeItem.js","Components/SearchBar.js","Constants.js","firebase.js","api/User.js","redux/UserSlice.js","Components/Dashboard.js","Components/FavouriteItem.js","Views/Main.js","Views/SearchResults.js","Views/MealInfo.js","store.js","Views/MyFavourites.js","Views/Profile.js","Views/ErrorPage.js","App.js","reportWebVitals.js","index.js","Views/MealInfo.module.css","Components/RandomRecipeItem.module.css"],"names":["module","exports","fetchUserFavouritesInfo","userFavourites","promiseArray","favouriteItemId","push","axios","get","then","mealRes","data","meals","Promise","all","RandomRecipeItem","onItemClick","useState","randomRecipeInfo","setRandomRecipeInfo","useEffect","resolve","reject","randomRes","catch","error","console","log","meal","Paper","component","Card","elevation","onClick","idMeal","CardActionArea","CardContent","sx","styles","cardContentStyle","className","itemStyles","randomRecipeTitleSection","Typography","variant","strMeal","src","strMealThumb","alt","randomRecipeImage","display","flexDirection","RecipeItem","item","width","borderRadius","height","justifyContent","CardMedia","textOverflow","SearchBar","initialValue","onSearchPress","searchValue","setSearchValue","onSubmit","event","preventDefault","p","alignItems","TextField","style","flex","id","label","placeholder","value","onChange","target","IconButton","type","NAME_CHANGE_SUCCESS","NAME_CHANGE_ERROR","PASSWORD_CHANGE_SUCCESS","PASSWORDS_SAME","INVALID_CREDENTIALS","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","userRef","collection","removeFromFavouriteFBStore","userId","currentUser","uid","updateDoc","doc","favourites","arrayRemove","initialState","name","isUserLoggedIn","userSlice","createSlice","reducers","logOnUser","state","logOutUser","setReduxName","action","payload","setUserId","setUserFavourites","addFavouriteById","removeFavouriteById","favouriteArrayWithoutId","filter","clearUserState","actions","Dashboard","history","dispatch","useDispatch","location","useLocation","homeButtonVisible","setHomeButtonVisible","pathname","anchorEl","setAnchorEl","loggedIn","useSelector","user","showSignupPage","setShowSignupPage","setName","username","setUsername","password","setPassword","errorMessage","setErrorMessage","showLoginModal","setShowLoginModal","showSuccessfulSnackbar","setShowSuccessfulSnackbar","snackbarSuccessMessage","setSnackbarSuccessMessage","open","Boolean","handleMenuAnchorClose","renderErrorField","Alert","severity","marginTop","AlertTitle","handleLogin","email","signInWithEmailAndPassword","credentials","loginUser","handleSignUp","createUserWithEmailAndPassword","setDoc","signUpUser","userData","message","currentTarget","MenuOutlined","Home","Menu","onClose","MenuItem","signOut","Modal","onBackdropClick","Box","modalStyle","Button","mt","Link","cursor","renderLoginContent","Snackbar","autoHideDuration","position","top","left","transform","bgcolor","border","boxShadow","FavouriteItem","onPress","removeFromFavourite","marginLeft","Favorite","color","mealId","Main","props","mainStyles","mainContainer","Grid","container","spacing","direction","itemStyle","lowerItemStyling","Component","paddingBottom","SearchResults","resultsLoading","searchResults","loading","keyword","searchRes","fetchMeals","mealResults","setState","URLSearchParams","this","search","fetchQuery","prevProps","prevState","CircularProgress","length","justify","map","searchResultItem","paddingRight","renderContent","MealInfo","mealInfo","mealIngredients","isFavourited","addToFavourite","bind","urlParams","mealData","mealDataEntries","Object","entries","ingredientQuantities","values","key","startsWith","ingredients","index","Array","isArray","quantity","undefined","strInstructions","stepsAsString","JSON","stringify","substring","split","arrayUnion","addToFavouriteFBStore","includes","disabled","FavoriteOutlined","_","isEmpty","outerMealInfoContainer","borderTopRightRadius","borderBottomRightRadius","upperSectionMealContent","renderFavouriteButton","renderIngredients","renderSteps","outerMealInfoNoContentContainer","mapDispatchToProps","connect","configureStore","reducer","userReducer","MyFavourites","localFavouriteList","localStorage","getItem","favouritesInfo","favouritesOuterContainer","favouriteItem","stopPropagation","noFavouritesOuterContainer","renderFavouriteContent","Profile","enteredName","currentPassword","newPassword","confirmNewPassword","successMessage","handleSubmit","newName","userDoc","res","EmailAuthProvider","credential","reauthenticateWithCredential","updatePassword","updateFBPassword","allSettled","tempSuccessMessage","tempErrorMessage","forEach","status","padding","renderErrorAlert","renderSuccessAlert","ErrorPage","errorPageContainer","AppRoute","exact","path","render","App","authUser","setAuthUser","unsubscribe","onAuthStateChanged","isAnonymous","setItem","removeItem","userSubscribe","onSnapshot","exists","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18c3925e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"favouritesOuterContainer\":\"MyFavourites_favouritesOuterContainer__2NNUb\",\"noFavouritesOuterContainer\":\"MyFavourites_noFavouritesOuterContainer__WZR1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__3ma2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPageContainer\":\"ErrorPage_errorPageContainer__16JPt\"};","import axios from \"axios\";\r\n\r\nexport const fetchMeals = (keyword) => { \r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n      .get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${keyword}`)\r\n      .then((searchRes) => {\r\n        if (searchRes.data.meals) {\r\n          resolve(searchRes.data.meals)\r\n        } else {\r\n          resolve([])\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        reject(error)\r\n      });\r\n    })\r\n}\r\n\r\nexport const getRandomRecipe = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('https://www.themealdb.com/api/json/v1/1/random.php').then(randomRes => {\r\n      resolve(randomRes.data.meals[0])\r\n            // setRandomRecipeInfo(randomRes.data.meals[0])\r\n    }).catch(error => {\r\n      console.log(error)\r\n      reject({})\r\n    })\r\n  })\r\n  \r\n}\r\n\r\nexport const getMealInfoWithId = id => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\r\n        .then((mealRes) => {\r\n          console.log(mealRes.data.meals)\r\n          if (mealRes.data.meals != null) {\r\n            const mealData = mealRes.data.meals[0];\r\n\r\n            const mealDataEntries = Object.entries(mealData);\r\n\r\n            const ingredientQuantities = Object.values(\r\n              mealDataEntries.filter(\r\n                ([key, value]) => key.startsWith(\"strMeasure\") && value !== \"\"\r\n              )\r\n            );\r\n\r\n            const ingredientNames = Object.values(\r\n              mealDataEntries.filter(\r\n                ([key, value]) =>\r\n                  key.startsWith(\"strIngredient\") && value !== \"\"\r\n              )\r\n            );\r\n\r\n            const ingredients = ingredientNames.map((item, index) => {\r\n              return [item[1], ingredientQuantities[index][1]];\r\n            });\r\n\r\n            resolve([mealData, ingredients]);\r\n          } \r\n          else {\r\n            reject([]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject([]);\r\n        });\r\n    });\r\n}\r\n\r\nexport const fetchUserFavouritesInfo = (userFavourites = []) => {\r\n\r\n  let promiseArray = []\r\n  for (let favouriteItemId of userFavourites) {\r\n        promiseArray.push(axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${favouriteItemId}`).then(mealRes => mealRes.data.meals[0]))\r\n  }\r\n\r\n  return Promise.all(promiseArray)\r\n\r\n}","import { Card, CardActionArea, CardContent, Paper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport { getRandomRecipe } from \"../api/Meal\";\r\nimport itemStyles from './RandomRecipeItem.module.css'\r\n\r\nconst RandomRecipeItem = ({ onItemClick = () => {} }) => {\r\n  \r\n  const [randomRecipeInfo, setRandomRecipeInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    getRandomRecipe().then(meal => {\r\n      setRandomRecipeInfo(meal)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Paper component={Card} elevation={1} onClick={() => onItemClick(randomRecipeInfo.idMeal)}>\r\n      <CardActionArea>\r\n        <CardContent sx={styles.cardContentStyle}>\r\n          <section className={itemStyles.randomRecipeTitleSection}>\r\n            <Typography variant=\"h4\" component=\"p\">\r\n              Featured Recipe: <br /> {randomRecipeInfo.strMeal}\r\n            </Typography>\r\n          </section>\r\n          <section className=\"random-recipe-content\">\r\n            <img\r\n              src={randomRecipeInfo.strMealThumb}\r\n              alt='Picture of random food dish'\r\n              className={itemStyles.randomRecipeImage}\r\n            />\r\n          </section>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  cardContentStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  }\r\n}\r\n\r\nexport { RandomRecipeItem }\r\n","import { Card, CardActionArea, CardContent, CardMedia, Typography } from \"@mui/material\"\r\n\r\nconst RecipeItem = ({ item, onItemClick = () => {} }) => {\r\n    return (\r\n        <Card sx={{ width: 200, borderRadius: 10, height: 350 }}  onClick={() => onItemClick()}>\r\n            <CardActionArea sx={{ width: 200, borderRadius: 10, height: 350, display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\r\n                <CardMedia component='img' src={item.strMealThumb} alt={`Picture of ${item.strMeal}`} />\r\n                <CardContent>\r\n                    <Typography textOverflow=\"ellipsis\" variant='h6' component='p'>{item.strMeal}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport { RecipeItem }","import { IconButton, Paper, TextField } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchBar = ({ initialValue = '', onSearchPress = () => {} }) => {\r\n\r\n  const [searchValue, setSearchValue] = useState(initialValue)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    onSearchPress(searchValue)\r\n\r\n  }\r\n    \r\n  return (\r\n    <Paper\r\n      component='form'\r\n      elevation={1}\r\n      onSubmit={handleSubmit}\r\n      sx={{ p: \"5px 4px\", display: \"flex\", alignItems: \"center\", width: \"60%\" }}\r\n    >\r\n      <TextField\r\n        style={{ display: \"flex\", flex: 12 }}\r\n        id=\"search-field\"\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n        placeholder={\"Search for recipes\"}\r\n        value={searchValue}\r\n        onChange={(event) => setSearchValue(event.target.value)}\r\n      />\r\n      <IconButton\r\n        type=\"submit\"\r\n        aria-label=\"search\"\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport { SearchBar }","export const PRIMARY_COLOUR = '#ffe4c4'\r\nexport const SECONDARY_COLOUR = '#b3a589'\r\n\r\nexport const NAME_CHANGE_SUCCESS = 'name-change-success'\r\nexport const NAME_CHANGE_ERROR = 'name-change-error'\r\n\r\nexport const PASSWORD_CHANGE_SUCCESS = 'password-change-success'\r\nexport const PASSWORD_MISMATCH = 'non-matching-passwords'\r\nexport const PASSWORDS_SAME = 'passwords-same'\r\nexport const PASSWORD_CHANGE_ERROR = 'password-change-error'\r\nexport const INVALID_CREDENTIALS = 'credentials-invalid'","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAnuLhAlhS5LOWcBRVkffThsWZl4-C_nBA\",\r\n  authDomain: \"juno-react-proj-meal.firebaseapp.com\",\r\n  projectId: \"juno-react-proj-meal\",\r\n  storageBucket: \"juno-react-proj-meal.appspot.com\",\r\n  messagingSenderId: \"1062769252048\",\r\n  appId: \"1:1062769252048:web:8ab64364b18bdc1694b0d5\",\r\n  measurementId: \"G-FPJDK6F56S\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default app","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, EmailAuthProvider, reauthenticateWithCredential, updatePassword, setPersistence } from \"firebase/auth\";\r\nimport { getFirestore, collection, setDoc, doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\r\nimport { PASSWORD_CHANGE_ERROR, PASSWORD_CHANGE_SUCCESS, PASSWORD_MISMATCH, INVALID_CREDENTIALS, NAME_CHANGE_SUCCESS, NAME_CHANGE_ERROR, PASSWORDS_SAME } from \"../Constants\";\r\nimport app from '../firebase'\r\n\r\n\r\nconst db = getFirestore(app)\r\nconst auth = getAuth(app)\r\n\r\n\r\nconst userRef = collection(db, 'users') \r\n\r\nexport const addToFavouriteFBStore = (id) => {\r\n\r\n    const userId = auth.currentUser.uid\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        updateDoc(doc(userRef, userId), {\r\n            favourites: arrayUnion(id)\r\n        }).then(() => resolve()).catch(error => reject(error))\r\n\r\n    })\r\n    \r\n\r\n}\r\n\r\nexport const removeFromFavouriteFBStore = (id) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const userId = auth.currentUser.uid\r\n\r\n        updateDoc(doc(userRef, userId), {\r\n            favourites: arrayRemove(id)\r\n        }).then(() => resolve()).catch(error => reject(error))\r\n\r\n    })\r\n\r\n}\r\n\r\nexport const signUpUser = (email, password, name) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        createUserWithEmailAndPassword(auth, email, password).then(credentials => {\r\n            const user = credentials.user\r\n\r\n            setDoc(doc(userRef, user.uid), {\r\n                name\r\n            }).then(() => {\r\n\r\n                resolve({ username: name, uid: user.uid })\r\n\r\n            }).catch(error => reject(error))\r\n            \r\n        }).catch(error => reject(error))\r\n\r\n    })   \r\n}\r\n\r\nexport const loginUser = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n        signInWithEmailAndPassword(auth, email, password).then(credentials => {\r\n            resolve(credentials) \r\n        }).catch(error => reject(error))\r\n\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        signOut(auth).then(() => {\r\n            resolve()\r\n        }).catch(error => reject(error))\r\n    })\r\n}\r\n\r\nexport const updateFBName = (newName) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const userId = auth.currentUser.uid\r\n\r\n        const userDoc = doc(userRef, userId)\r\n        \r\n\r\n        updateDoc(userDoc, {\r\n            name: newName\r\n        }).then(() => {\r\n            resolve(NAME_CHANGE_SUCCESS)\r\n        }).catch(() => {\r\n            reject(NAME_CHANGE_ERROR)\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const updateFBPassword = (currentPassword, newPassword) => {\r\n\r\n    let currentUser = auth.currentUser\r\n    let credentials = EmailAuthProvider.credential(currentUser.email, currentPassword)\r\n\r\n    return new Promise((resolve, reject) => {\r\n        reauthenticateWithCredential(currentUser, credentials).then(() => {\r\n            if (currentPassword !== newPassword) {\r\n                updatePassword(currentUser, newPassword).then(() => {\r\n                    resolve(PASSWORD_CHANGE_SUCCESS)\r\n                }).catch(() => reject(PASSWORD_CHANGE_ERROR))\r\n\r\n            }\r\n            else {\r\n                reject(PASSWORDS_SAME)\r\n            }\r\n    \r\n        }).catch(() => {\r\n            reject(INVALID_CREDENTIALS)\r\n        })\r\n\r\n    })\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    uid: '',\r\n    userFavourites: [],\r\n    isUserLoggedIn: false\r\n\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        logOnUser: (state) => {\r\n            state.isUserLoggedIn = true\r\n        },\r\n        logOutUser: (state) => {\r\n            state.isUserLoggedIn = false\r\n        },\r\n        setReduxName: (state, action) => {\r\n           state.name = action.payload\r\n        },\r\n        setUserId: (state, action) => {\r\n            state.uid = action.payload\r\n        },\r\n        setUserFavourites: (state, action) => {\r\n            state.userFavourites = action.payload\r\n        },\r\n        addFavouriteById: (state, action) => {\r\n            state.userFavourites.push(action.payload)\r\n        },\r\n        removeFavouriteById: (state, action) => {\r\n            const favouriteArrayWithoutId = state.userFavourites.filter(item => item !== action.payload)\r\n            state.userFavourites = favouriteArrayWithoutId\r\n        },\r\n        clearUserState: () => initialState\r\n    }\r\n})\r\n\r\nexport const { setReduxName, setUserId, setUserFavourites, addFavouriteById, removeFavouriteById, clearUserState, logOnUser, logOutUser } = userSlice.actions\r\n\r\nexport default userSlice.reducer","import { Home, MenuOutlined } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Link,\r\n  Menu,\r\n  MenuItem,\r\n  Modal,\r\n  TextField,\r\n  Typography,\r\n  Alert,\r\n  AlertTitle,\r\n  Snackbar,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser, logoutUser, signUpUser } from \"../api/User\";\r\nimport { setReduxName, setUserId } from \"../redux/UserSlice\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation()\r\n\r\n  const [homeButtonVisible, setHomeButtonVisible] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/juno_react_project' || location.pathname === '/') {\r\n      setHomeButtonVisible(false)\r\n    }\r\n    else {\r\n      setHomeButtonVisible(true)\r\n    }\r\n\r\n  }, [location])\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const loggedIn = useSelector((state) => state.user.isUserLoggedIn);\r\n\r\n\r\n  const [showSignupPage, setShowSignupPage] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showSuccessfulSnackbar, setShowSuccessfulSnackbar] = useState(false);\r\n  const [snackbarSuccessMessage, setSnackbarSuccessMessage] = useState('');\r\n\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuAnchorClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const renderDashboardItems = () => {\r\n    if (loggedIn) {\r\n      return (\r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleMenuAnchorClose}\r\n        >\r\n          <MenuItem onClick={() => {\r\n              handleMenuAnchorClose()\r\n              history.push('/profile')\r\n            }}>Profile</MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleMenuAnchorClose();\r\n              history.push(\"/favourites\");\r\n            }}\r\n          >\r\n            My Favourites\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleMenuAnchorClose();\r\n              logoutUser().then(() => {\r\n                history.push(\"/\");\r\n                setSnackbarSuccessMessage('Successfully logged out.')\r\n                setShowSuccessfulSnackbar(true)\r\n                console.log(\"Logged out\");\r\n              });\r\n            }}\r\n          >\r\n            Logout\r\n          </MenuItem>\r\n        </Menu>\r\n      );\r\n    } else {\r\n      return (\r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleMenuAnchorClose}\r\n        >\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleMenuAnchorClose();\r\n              setErrorMessage('')\r\n              setShowLoginModal(true);\r\n            }}\r\n          >\r\n            Login\r\n          </MenuItem>\r\n        </Menu>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderErrorField = () => {\r\n    if (errorMessage !== \"\") {\r\n      return (\r\n        <Alert severity=\"error\" sx={{ marginTop: 2 }}>\r\n          <AlertTitle>Error</AlertTitle>\r\n          {errorMessage}\r\n        </Alert>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLogin = event => {\r\n    event.preventDefault()\r\n    if (username !== \"\" && password !== \"\") {\r\n      loginUser(username, password)\r\n        .then(() => {\r\n          setSnackbarSuccessMessage('Logged in.')\r\n          setShowSuccessfulSnackbar(true);\r\n          setUsername(\"\");\r\n          setPassword(\"\");\r\n          setShowLoginModal(false);\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage('Unable to login. Please try again.');\r\n          setSnackbarSuccessMessage(\"\");\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      setErrorMessage(\r\n        \"One or more fields are missing. Please input username and/or password and try again.\"\r\n      );\r\n      setSnackbarSuccessMessage(\"\");\r\n    }\r\n  }\r\n\r\n  const handleSignUp = (event) => {\r\n    event.preventDefault()\r\n    if (username !== \"\" && password !== \"\" && name !== \"\") {\r\n      signUpUser(username, password, name)\r\n        .then((userData) => {\r\n          setErrorMessage(\"\");\r\n          setShowLoginModal(false);\r\n          setShowSignupPage(false); \r\n          dispatch(setReduxName(userData.name));\r\n          dispatch(setUserId(userData.uid));\r\n          setSnackbarSuccessMessage(\"Success in creating account. You have been logged in automatically.\");\r\n        })\r\n        .catch((error) => {\r\n          setSnackbarSuccessMessage(\"\");\r\n          setErrorMessage(error.message);\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const renderLoginContent = () => {\r\n    if (!loggedIn) {\r\n      if (!showSignupPage) {\r\n        return (\r\n          <Box sx={styles.modalStyle}>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              Login\r\n            </Typography>\r\n              <Box\r\n                sx={{\r\n                  marginTop: 1,\r\n                  alignItems: \"flex-start\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n                component='form'\r\n                onSubmit={handleLogin}\r\n              >\r\n                  <TextField\r\n                    sx={{ marginTop: 4 }}\r\n                    id=\"Email-field\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    value={username}\r\n                    type=\"email\"\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                  />\r\n                  <TextField\r\n                    sx={{ marginTop: 2 }}\r\n                    id=\"password-field\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    value={password}\r\n                    type=\"password\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginTop: 2 }}\r\n                    variant=\"contained\"\r\n                    id=\"login-button\"\r\n                    type='submit'\r\n                  >\r\n                    Login\r\n                  </Button>\r\n              </Box>\r\n\r\n            <Typography variant=\"h6\" component=\"h2\" sx={{ mt: 6 }}>\r\n              Don't have an account? Click{\" \"}\r\n              <Link\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  setShowSignupPage(true);\r\n                  setErrorMessage(\"\");\r\n                  setSnackbarSuccessMessage(\"\");\r\n                }}\r\n              >\r\n                here\r\n              </Link>{\" \"}\r\n              to sign up.\r\n            </Typography>\r\n            {renderErrorField()}\r\n          </Box>\r\n        );\r\n      } else {\r\n        return (\r\n          <Box sx={styles.modalStyle}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" component=\"h2\">\r\n                Sign Up\r\n              </Typography>\r\n              <Button\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  setSnackbarSuccessMessage(\"\");\r\n                  setErrorMessage(\"\");\r\n                  setShowSignupPage(false);\r\n                }}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Box>\r\n              <Box\r\n                sx={{\r\n                  marginTop: 1,\r\n                  alignItems: \"flex-start\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n                component='form'\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <TextField\r\n                  sx={{ marginTop: 4 }}\r\n                  id=\"name-field\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  value={name}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                />\r\n                <TextField\r\n                  sx={{ marginTop: 2 }}\r\n                  id=\"email-field\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  value={username}\r\n                  type=\"email\"\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                />\r\n                <TextField\r\n                  sx={{ marginTop: 2 }}\r\n                  id=\"password-field\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  value={password}\r\n                  type=\"password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n                <Button\r\n                  sx={{ marginTop: 2 }}\r\n                  variant=\"contained\"\r\n                  id=\"login-button\"\r\n                  type='submit'\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                {renderErrorField()}\r\n              </Box>\r\n          </Box>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClick}>\r\n        <MenuOutlined />\r\n      </IconButton>\r\n      {homeButtonVisible && (\r\n        <IconButton onClick={() => history.push(\"/\")}>\r\n          <Home />\r\n        </IconButton>\r\n      )}\r\n      {renderDashboardItems()}\r\n      {!loggedIn && <Modal\r\n          onBackdropClick={() => setShowLoginModal(false)}\r\n          open={showLoginModal}\r\n          handleMenuAnchorClose={() => setShowLoginModal(false)}\r\n        >\r\n          {renderLoginContent()}\r\n        </Modal>\r\n      }\r\n\r\n      <Snackbar open={showSuccessfulSnackbar} autoHideDuration={4000} onClose={() => {\r\n          setShowSuccessfulSnackbar(false)\r\n          setSnackbarSuccessMessage('')\r\n        }}>\r\n        <Alert severity=\"success\" sx={{ width: '100%' }}>\r\n          {snackbarSuccessMessage}\r\n        </Alert>\r\n\r\n      </Snackbar>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  modalStyle: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"#ffe4c4\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  },\r\n};\r\n\r\nexport { Dashboard };\r\n","import { Favorite } from \"@mui/icons-material\";\r\nimport { Card, CardActionArea, CardMedia, CardContent, Typography, IconButton } from \"@mui/material\";\r\n\r\nconst FavouriteItem = ({ item, onPress =  () => {}, removeFromFavourite = () => {} }) => {\r\n    return (\r\n        <Card key={item.mealId} sx={{ width:  250, height: 350 }}>\r\n            <CardActionArea onClick={() => onPress()} >\r\n                <CardContent sx={{ display: 'flex', flexDirection : 'column'  }}>\r\n                    <CardMedia component='img' src={item.strMealThumb} alt={`Picture of ${item.strMeal}`} />\r\n                    <CardContent sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '100%' }}>\r\n                        <Typography>{item.strMeal}</Typography>\r\n                        <IconButton sx={{ marginLeft: 5 }} onClick={event => removeFromFavourite(event)}>\r\n                            <Favorite sx={{ color: 'pink' }} />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                    \r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport { FavouriteItem }","import React, { Component } from 'react'\r\nimport { Grid } from '@mui/material';\r\nimport { SearchBar, RandomRecipeItem } from '../Components';\r\nimport mainStyles from './Main.module.css'\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={mainStyles.mainContainer}>\r\n                <Grid container spacing={1} width='80%' justifyContent='center' direction=\"column\">\r\n                    <Grid item sx={styles.itemStyle}>\r\n                        <h1>The Recipe Archive</h1>\r\n                    </Grid>\r\n                    <Grid item sx={styles.itemStyle}>\r\n                        {/* Search bar */}\r\n                        <SearchBar onSearchPress={value => {\r\n                            this.props.history.push(`/search?keyword=${value}`)\r\n                        }}/>\r\n                    </Grid>\r\n                    <Grid item sx={styles.lowerItemStyling}>\r\n                        {/* Random featured recipe */}\r\n                        <RandomRecipeItem onItemClick={id => this.props.history.push(`/meal?id=${id}`)} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    itemStyle: {\r\n        display: 'flex', \r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    lowerItemStyling: {\r\n        paddingBottom: 20\r\n    }\r\n}\r\n\r\nexport default Main","import { Grid, Typography, CircularProgress } from '@mui/material'\r\nimport axios from 'axios'\r\nimport { Component } from 'react'\r\nimport { fetchMeals } from '../api/Meal';\r\nimport { RecipeItem, SearchBar } from '../Components'\r\n\r\n\r\nclass SearchResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      resultsLoading: false,\r\n      searchResults: [],\r\n      // searchQuery: '',\r\n      loading: true\r\n    };\r\n  }\r\n\r\n  fetchQuery(keyword) {\r\n    // this.setState({ searchQuery: keyword })\r\n    // axios\r\n    //   .get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${keyword}`)\r\n    //   .then((searchRes) => {\r\n    //     if (searchRes.data.meals) {\r\n    //       this.setState({ searchResults: searchRes.data.meals, loading: false });\r\n    //     } else {\r\n    //       this.setState({ searchResults: [], loading: false });\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n    fetchMeals(keyword).then(mealResults => {\r\n      this.setState({ searchResults: mealResults, loading: false });\r\n    }).catch(() => {\r\n      this.setState({ searchResults: [], loading: false });\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlParams = new URLSearchParams(this.props.location.search);\r\n    const keyword = urlParams.get(\"keyword\");\r\n    this.fetchQuery(keyword)\r\n    this.keyword = keyword\r\n    \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.location.search !== this.props.location.search) {\r\n\r\n        const urlParams = new URLSearchParams(this.props.location.search);\r\n        const keyword = urlParams.get(\"keyword\");\r\n        this.fetchQuery(keyword)\r\n\r\n        this.keyword = keyword\r\n    }\r\n  }\r\n\r\n  renderContent() {\r\n      if (this.state.loading) {\r\n        return (\r\n          <div\r\n            className=\"search-results-container\"\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: 'center',\r\n              width: '100vw',\r\n              height: '100vh'\r\n            }}>\r\n                <CircularProgress />\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n            <div\r\n              className=\"search-results-container\"\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Grid container display=\"flex\" alignItems=\"center\" direction=\"column\">\r\n                <Grid item container direction='column' alignItems='center'>\r\n                  <SearchBar initialValue={this.keyword} onSearchPress={value => {\r\n                      console.log(\"Outer value: \", value)\r\n                      this.props.history.push(`/search?keyword=${value}`)\r\n                    }} />\r\n                  <Typography sx={{ marginTop: 10 }}>\r\n                    There are{\" \"}\r\n                    {this.state.searchResults ? this.state.searchResults.length : 0}{\" \"}\r\n                    results\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  marginTop={10}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                  width=\"60%\"\r\n                >\r\n                  {this.state.searchResults.map((searchResultItem) => {\r\n                    return (\r\n                      <Grid item paddingRight={2} paddingBottom={2} borderRadius={5}  key={searchResultItem.idMeal}>\r\n                        <RecipeItem\r\n                          item={searchResultItem}\r\n                          onItemClick={() => {\r\n                            console.log(\"Clicked\");\r\n                            this.props.history.push(\r\n                              `/meal?id=${searchResultItem.idMeal}`\r\n                            );\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          );\r\n\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return this.renderContent()\r\n  }\r\n}\r\n\r\nexport default SearchResults","import { Favorite, FavoriteOutlined } from \"@mui/icons-material\";\r\nimport { Grid, IconButton } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMealInfoWithId } from \"../api/Meal\";\r\nimport { addToFavouriteFBStore, removeFromFavouriteFBStore } from \"../api/User\";\r\nimport { addFavouriteById, removeFavouriteById } from '../redux/UserSlice'\r\nimport _ from 'lodash'\r\nimport styles from './MealInfo.module.css'\r\n\r\nclass MealInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mealInfo: {},\r\n      mealIngredients: [],\r\n      isFavourited: false\r\n    };\r\n\r\n    this.addToFavourite = this.addToFavourite.bind(this)\r\n    this.removeFromFavourite = this.removeFromFavourite.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlParams = new URLSearchParams(this.props.location.search);\r\n\r\n    this.id = urlParams.get(\"id\");\r\n\r\n    getMealInfoWithId(this.id).then(([mealData, ingredients]) => {\r\n      this.setState({ mealInfo: mealData, mealIngredients: ingredients })\r\n    }).catch(() => this.setState({ mealInfo: [], mealIngredients: [] }))\r\n\r\n  }\r\n\r\n  renderIngredients(ingredients = []) {\r\n    if (ingredients && Array.isArray(ingredients) && ingredients.length > 0) {\r\n      return (\r\n        <ul>\r\n          {ingredients.map(([name, quantity]) => {\r\n            return (\r\n              <li key={`${name}${quantity}`}>\r\n                {quantity} - {name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderSteps() {\r\n\r\n    if (this.state.mealInfo.strInstructions !== undefined) {\r\n      const stepsAsString = JSON.stringify(this.state.mealInfo.strInstructions)\r\n      const steps = stepsAsString.substring(1, stepsAsString.length - 1).split('\\\\r\\\\n').filter(item => item !== '')\r\n\r\n      return steps.map((item, index) => {\r\n        return <p key={index}>{index + 1}. {item}</p>        \r\n      });\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  addToFavourite() {\r\n    const mealId = this.state.mealInfo.idMeal\r\n\r\n    addToFavouriteFBStore(mealId).then(() => {\r\n      this.props.addFavouriteById(mealId)\r\n      this.setState({ isFavourited: true })\r\n    })\r\n\r\n\r\n  }\r\n\r\n  removeFromFavourite() {\r\n    const mealId = this.state.mealInfo.idMeal\r\n\r\n    removeFromFavouriteFBStore(mealId).then(() => {\r\n      this.props.removeFavouriteById(mealId)\r\n      this.setState({ isFavourited: false })\r\n    })\r\n  }\r\n\r\n  renderFavouriteButton() {\r\n    const mealId = this.state.mealInfo.idMeal\r\n\r\n    if (this.props.userFavourites.includes(mealId)) {\r\n      return (\r\n        <IconButton disabled={!this.props.isUserLoggedIn} onClick={this.removeFromFavourite}>\r\n          <Favorite sx={{ color: 'pink' }} />\r\n        </IconButton>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <IconButton disabled={!this.props.isUserLoggedIn} onClick={this.addToFavourite}>\r\n          <FavoriteOutlined  sx={{ color: 'none' }}/>\r\n        </IconButton>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderContent() {\r\n    if (!(_.isEmpty(this.state.mealInfo)) && this.state.mealIngredients.length > 0) {\r\n      return (\r\n        <div className={styles.outerMealInfoContainer}>\r\n          <Grid container display=\"flex\" alignItems=\"center\" direction=\"column\" width='80%'>\r\n            <Grid item>\r\n              <img\r\n                src={this.state.mealInfo.strMealThumb}\r\n                alt={`Picture of ${this.state.mealInfo.strMeal}`}\r\n                style={{\r\n                  borderTopRightRadius: 10,\r\n                  borderBottomRightRadius: 10,\r\n                  height: \"100%\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item sx={{ paddingBottom: 20 }}>\r\n              <div className={styles.upperSectionMealContent}>\r\n                  <h2>{this.state.mealInfo.strMeal}</h2>\r\n                  {this.renderFavouriteButton()}\r\n              </div>\r\n              <div>\r\n                <div>\r\n                  <h6>Ingredients</h6>\r\n                  {this.renderIngredients(this.state.mealIngredients)}\r\n                </div>\r\n                <div>\r\n                  <h6>Steps</h6>\r\n                  {this.renderSteps()}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className={styles.outerMealInfoNoContentContainer}>\r\n          <h1>\r\n            The meal with the associated id {this.id} does not exist.\r\n          </h1>\r\n        </div>\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderContent()\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { userFavourites, isUserLoggedIn } = state.user\r\n\r\n  return { userFavourites, isUserLoggedIn }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    addFavouriteById,\r\n    removeFavouriteById\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MealInfo);\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from './redux/UserSlice'\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  }\r\n})","import { Grid, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchUserFavouritesInfo } from '../api/Meal';\r\nimport { removeFromFavouriteFBStore } from \"../api/User\";\r\nimport { FavouriteItem } from '../Components'\r\nimport { addFavouriteById, removeFavouriteById } from '../redux/UserSlice'\r\nimport styles from './MyFavourites.module.css'\r\n\r\n\r\n\r\nclass MyFavourites extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          localFavouriteList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      let authLocal = localStorage.getItem('authUser')\r\n      if (!authLocal) {\r\n        this.props.history.push('/')\r\n      }\r\n\r\n      fetchUserFavouritesInfo(this.props.userFavourites || []).then(favouritesInfo => {\r\n        this.setState({ localFavouriteList: (favouritesInfo.length > 0) ? favouritesInfo : [] })\r\n      })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.userFavourites.length !== this.props.userFavourites.length) {\r\n        fetchUserFavouritesInfo(this.props.userFavourites || []).then(favouritesInfo => {\r\n          this.setState({ localFavouriteList: favouritesInfo })\r\n        })\r\n      }\r\n    }\r\n\r\n    renderFavouriteContent() {\r\n\r\n      const { localFavouriteList = []} = this.state\r\n\r\n      if (localFavouriteList.length > 0) {\r\n\r\n        return (\r\n          <div className={styles.favouritesOuterContainer}>\r\n                <h1>My Favourites</h1>\r\n                <Grid container display=\"flex\" alignItems=\"center\" direction=\"row\" width='80%' marginTop={3}>\r\n                  {\r\n                    localFavouriteList.map(favouriteItem => (\r\n                      <Grid item key={favouriteItem.idMeal} paddingRight={5}>\r\n                        <FavouriteItem \r\n                          item={favouriteItem}\r\n                          onPress={() => this.props.history.push(`/meal?id=${favouriteItem.idMeal}`)}\r\n                          removeFromFavourite={event => {\r\n                            event.stopPropagation()\r\n                            removeFromFavouriteFBStore(favouriteItem.idMeal)\r\n                          }} />\r\n                      </Grid>\r\n\r\n                    ))\r\n                  }\r\n                </Grid>\r\n          </div>\r\n\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <div className={styles.noFavouritesOuterContainer}>\r\n              <h3>You appear to have no favourites. Search for recipes and add them to your favourites to view them here.</h3> \r\n            </div>\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return this.renderFavouriteContent()\r\n    }\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { userFavourites, isUserLoggedIn } = state.user\r\n\r\n    return { userFavourites, isUserLoggedIn }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addFavouriteById,\r\n    removeFavouriteById\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyFavourites)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Typography, TextField, Button, Alert, AlertTitle } from '@mui/material'\r\nimport { INVALID_CREDENTIALS, NAME_CHANGE_ERROR, NAME_CHANGE_SUCCESS ,PASSWORDS_SAME,PASSWORD_CHANGE_SUCCESS, PASSWORD_MISMATCH, SECONDARY_COLOUR } from '../Constants'\r\nimport { updateFBName, updateFBPassword } from '../api/User'\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            enteredName: this.props.name,\r\n            currentPassword: '',\r\n            newPassword: '',\r\n            confirmNewPassword: '',\r\n            errorMessage: '',\r\n            successMessage: ''\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let authLocal = localStorage.getItem('authUser')\r\n        if (!authLocal) {\r\n            this.props.history.push('/')\r\n        }    \r\n    }\r\n\r\n    renderSuccessAlert() {\r\n        if (this.state.successMessage.length > 0) {\r\n            return (\r\n                <Alert severity=\"success\" sx={{ marginTop: 2 }}>\r\n                    <AlertTitle>Success</AlertTitle>\r\n                    {this.state.successMessage}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderErrorAlert() {\r\n        if (this.state.errorMessage.length > 0) {\r\n            return (\r\n                <Alert severity=\"error\" sx={{ marginTop: 2 }}>\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    {this.state.errorMessage}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.setState({ errorMessage: '', successMessage: '' })\r\n\r\n        let promiseArray = []\r\n\r\n        if (this.state.enteredName !== this.props.name) {\r\n            promiseArray.push(updateFBName(this.state.enteredName).then(res => {\r\n                if (res === NAME_CHANGE_SUCCESS) {\r\n                    return 'Successfully changed name associated with account.'\r\n                }\r\n\r\n            }))\r\n        }\r\n\r\n        if (this.state.currentPassword !== '' && this.state.newPassword !== '' && this.state.confirmNewPassword !== '') {\r\n            if (this.state.newPassword === this.state.confirmNewPassword) {\r\n                promiseArray.push(updateFBPassword(this.state.currentPassword, this.state.newPassword).then(res => {\r\n                    let successMessage = ''\r\n                    if (res === PASSWORD_CHANGE_SUCCESS) {\r\n                        successMessage = 'Your password has been successfully changed.'\r\n                    }\r\n                    \r\n                    return successMessage\r\n                }))\r\n            }\r\n        }\r\n\r\n\r\n        if (promiseArray.length > 0) {\r\n          Promise.allSettled(promiseArray)\r\n            .then(res => {\r\n                let tempSuccessMessage = ''\r\n                let tempErrorMessage = ''\r\n                \r\n                if (res.length > 0) {\r\n                    res.forEach(item => {\r\n                        console.log(item)\r\n                        if (item.status === 'fulfilled') {\r\n                            tempSuccessMessage += `${item.value} `\r\n                        }\r\n                        else {\r\n                            if (item.value === NAME_CHANGE_ERROR) {\r\n                                tempErrorMessage += 'Unable to change name. Please try again.'\r\n\r\n                            }\r\n                            \r\n                            if (item.value === INVALID_CREDENTIALS) {\r\n                                tempErrorMessage += 'The entered information is not present in our records. Please try again.'\r\n                \r\n                            }\r\n                            else if (item.value === PASSWORDS_SAME) {\r\n                                tempErrorMessage += 'The entered passwords (old and new) are the same. Please try again.'\r\n                \r\n                            }\r\n                            else {\r\n                                tempErrorMessage = 'There appears to be an internal error. Please refresh the app and try again.'\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n                this.setState({ currentPassword: '', newPassword: '', confirmNewPassword: '', successMessage: tempSuccessMessage, errorMessage: tempErrorMessage })\r\n            })\r\n            \r\n        }\r\n        else {\r\n            if (this.state.newPassword !== this.state.confirmNewPassword) {\r\n                this.setState({ errorMessage: 'The passwords do not match. Please try again.' })\r\n            }\r\n            else {\r\n                this.setState({ errorMessage: 'No information has been changed. Please try again.' })\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n              className=\"search-results-container\"\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n                <Grid container width=\"60%\"  borderRadius={10} border={`2px solid ${SECONDARY_COLOUR}`} direction='column' padding={5}>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <Grid container item direction='column'>\r\n                            <h4>Name</h4>\r\n                            <TextField value={this.state.enteredName} onChange={event => this.setState({ enteredName: event.target.value })} />\r\n                        </Grid>\r\n                        <Grid container item direction='column'>\r\n                            <h4>Password</h4>\r\n                            <TextField type='password' sx={{ paddingBottom: 2 }} value={this.state.currentPassword} onChange={event => this.setState({ currentPassword: event.target.value })} label='Current Password' />\r\n                            <TextField type='password' sx={{ paddingBottom: 2 }} value={this.state.newPassword} onChange={event => this.setState({ newPassword: event.target.value })} label='New Password' />\r\n                            <TextField type='password' sx={{ paddingBottom: 2 }} value={this.state.confirmNewPassword} onChange={event => this.setState({ confirmNewPassword: event.target.value })} label='Confirm New Password' />\r\n                        </Grid>\r\n                        <Button type='submit' variant='contained'>Apply</Button>\r\n                    </form>\r\n                    {this.renderErrorAlert()}\r\n                    {this.renderSuccessAlert()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { name, isUserLoggedIn } = state.user\r\n    return { name, isUserLoggedIn }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile)","import { Component } from \"react\";\r\nimport styles from './ErrorPage.module.css'\r\n\r\nclass ErrorPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.errorPageContainer}>\r\n                <h1>It appears that the page you are looking for does not exist. Please try again.</h1>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default ErrorPage","import { Route, Switch } from 'react-router';\nimport Main from './Views/Main';\nimport SearchResults from './Views/SearchResults';\nimport MealInfo from './Views/MealInfo';\nimport { Dashboard } from './Components';\nimport store from './store';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth'\nimport { getFirestore, onSnapshot, doc } from 'firebase/firestore';\nimport { useEffect, useState } from 'react';\nimport app from './firebase';\nimport { clearUserState, logOnUser, setReduxName, setUserFavourites, setUserId } from './redux/UserSlice';\nimport MyFavourites from './Views/MyFavourites';\nimport Profile from './Views/Profile';\nimport { useDispatch } from 'react-redux';\nimport ErrorPage from './Views/ErrorPage';\n\n\nconst AppRoute = ({ exact, path, component: Component }) => {\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(props) => (\n        <div>\n          <Dashboard history={props.history} />\n          <Component {...props} />\n        </div>\n      )}\n    />\n  )\n}\n\n\nfunction App() {\n  const auth = getAuth(app)\n  const db = getFirestore(app)\n\n  const [authUser, setAuthUser] = useState(null)\n\n  const dispatch = useDispatch()\n\n\n  //Auth user listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user && !user.isAnonymous) {\n        localStorage.setItem('authUser', user)\n        dispatch(setUserId(user.uid))\n        dispatch(logOnUser())\n      }\n      else {\n        localStorage.removeItem('authUser')\n        dispatch(clearUserState())\n      }\n      setAuthUser(user)\n    })\n\n    return () => unsubscribe()\n\n  }, [])\n\n\n  //User info listener\n  useEffect(() => {\n\n    if (authUser && !authUser.isAnonymous) {\n\n      const userSubscribe = onSnapshot(doc(db, 'users', authUser.uid), userData => {\n        if (userData.exists()) {\n          dispatch(setReduxName(userData.data().name))\n          dispatch(setUserFavourites(userData.data().favourites || []))\n        }\n      })\n\n      return () => userSubscribe()\n    }\n    else {\n      return\n    }\n\n  }, [authUser])\n\n\n\n  return (\n    <Switch>\n      <AppRoute path='/search' component={SearchResults} />\n      <AppRoute path='/meal' component={MealInfo} />\n      <AppRoute path='/favourites' component={MyFavourites} />\n      <AppRoute path='/profile' component={Profile} />\n      <AppRoute exact path=\"/\" component={Main} />\n      <AppRoute component={ErrorPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename='/juno_react_project'>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerMealInfoContainer\":\"MealInfo_outerMealInfoContainer__306Im\",\"outerMealInfoNoContentContainer\":\"MealInfo_outerMealInfoNoContentContainer__-cg8X\",\"upperSectionMealContent\":\"MealInfo_upperSectionMealContent__TAj6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"randomRecipeTitleSection\":\"RandomRecipeItem_randomRecipeTitleSection__4vf6H\",\"randomRecipeImage\":\"RandomRecipeItem_randomRecipeImage__3bRNc\"};"],"sourceRoot":""}