{"version":3,"sources":["Views/SearchResults.module.css","Views/Main.module.css","Views/Profile.module.css","Views/ErrorPage.module.css","api/Meal.js","Components/RandomRecipeItem.js","Components/RecipeItem.js","Components/SearchBar.js","Constants.js","firebase.js","api/User.js","redux/UserSlice.js","Components/Dashboard.js","Components/FavouriteItem.js","Components/LoadingHelmet.js","Views/Main.js","Views/SearchResults.js","Views/MealInfo.js","Views/MyFavourites.js","Views/Profile.js","Views/ErrorPage.js","App.js","reportWebVitals.js","store.js","index.js","Views/MealInfo.module.css","Views/MyFavourites.module.css","Components/RandomRecipeItem.module.css"],"names":["module","exports","fetchUserFavouritesInfo","userFavourites","promiseArray","favouriteItemId","push","axios","get","then","mealRes","data","meals","Promise","all","RandomRecipeItem","onItemClick","useState","randomRecipeInfo","setRandomRecipeInfo","loading","setLoading","useEffect","resolve","reject","randomRes","catch","error","console","log","meal","Paper","component","Card","elevation","onClick","idMeal","sx","styles","paperStyle","CircularProgress","paddingTop","paddingBottom","CardActionArea","CardContent","cardContentStyle","className","itemStyles","randomRecipeTitleSection","Typography","variant","strMeal","src","strMealThumb","alt","randomRecipeImage","display","flexDirection","justifyContent","borderRadius","RecipeItem","item","width","height","CardMedia","textOverflow","SearchBar","initialValue","onSearchPress","searchValue","setSearchValue","onSubmit","event","preventDefault","p","alignItems","TextField","style","flex","id","label","placeholder","value","onChange","target","IconButton","type","disabled","SECONDARY_COLOUR","NAME_CHANGE_SUCCESS","NAME_CHANGE_ERROR","PASSWORD_CHANGE_SUCCESS","PASSWORDS_SAME","INVALID_CREDENTIALS","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","userRef","collection","removeFromFavouriteFBStore","userId","currentUser","uid","updateDoc","doc","favourites","arrayRemove","initialState","name","isUserLoggedIn","userSlice","createSlice","reducers","logOnUser","state","logOutUser","setReduxName","action","payload","setUserId","setUserFavourites","clearUserState","actions","Dashboard","history","dispatch","useDispatch","location","useLocation","homeButtonVisible","setHomeButtonVisible","pathname","anchorEl","setAnchorEl","loggedIn","useSelector","user","showSignupPage","setShowSignupPage","setName","username","setUsername","password","setPassword","errorMessage","setErrorMessage","showLoginModal","setShowLoginModal","showSuccessfulSnackbar","setShowSuccessfulSnackbar","snackbarSuccessMessage","setSnackbarSuccessMessage","open","Boolean","handleMenuAnchorClose","renderErrorField","Alert","severity","marginTop","AlertTitle","handleLogin","email","signInWithEmailAndPassword","credentials","loginUser","handleSignUp","createUserWithEmailAndPassword","setDoc","signUpUser","userData","code","message","currentTarget","MenuOutlined","Home","Menu","onClose","MenuItem","signOut","Modal","onBackdropClick","Box","modalStyle","Button","color","containedButtonStyling","mt","Link","cursor","renderLoginContent","Snackbar","autoHideDuration","position","top","left","transform","bgcolor","border","boxShadow","backgroundColor","FavouriteItem","onPress","removeFromFavourite","marginLeft","Favorite","mealId","LoadingHelmet","Helmet","Main","props","mainStyles","mainContainer","this","renderHelmet","Grid","container","spacing","direction","itemStyle","lowerItemStyling","Component","SearchResults","resultsLoading","searchResults","keyword","searchRes","fetchMeals","mealResults","setState","URLSearchParams","search","fetchQuery","prevProps","prevState","searchResultsLoadingContainer","searchResultsContainer","renderResultsHelmet","length","justify","map","searchResultItem","paddingRight","renderContent","MealInfo","mealInfo","mealIngredients","isFavourited","addToFavourite","bind","urlParams","mealData","mealDataEntries","Object","entries","ingredientQuantities","values","filter","key","startsWith","ingredients","index","Array","isArray","quantity","undefined","strInstructions","stepsAsString","JSON","stringify","substring","split","includes","arrayUnion","addToFavouriteFBStore","FavoriteOutlined","mealInfoLoadingContainer","_","isEmpty","outerMealInfoNoContentContainer","renderNoMealHelmet","outerMealInfoContainer","renderMealHelmet","upperSectionMealContent","renderFavouriteButton","renderIngredients","renderSteps","connect","MyFavourites","localFavouriteList","localStorage","getItem","favouritesInfo","favouritesLoadingContainer","favouritesOuterContainer","renderFavouriteHelmet","favouriteItem","keys","stopPropagation","noFavouritesOuterContainer","renderFavouriteContent","Profile","enteredName","currentPassword","newPassword","confirmNewPassword","successMessage","handleSubmit","newName","userDoc","res","EmailAuthProvider","credential","reauthenticateWithCredential","updatePassword","updateFBPassword","allSettled","tempSuccessMessage","tempErrorMessage","forEach","status","outerProfileContainer","padding","renderErrorAlert","renderSuccessAlert","ErrorPage","errorPageContainer","AppRoute","exact","path","render","App","authUser","setAuthUser","unsubscribe","onAuthStateChanged","isAnonymous","setItem","removeItem","userSubscribe","onSnapshot","exists","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","store","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62ee0811.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchResultsLoadingContainer\":\"SearchResults_searchResultsLoadingContainer__V9_3L\",\"searchResultsContainer\":\"SearchResults_searchResultsContainer__2htDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__3ma2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerProfileContainer\":\"Profile_outerProfileContainer__2RWFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPageContainer\":\"ErrorPage_errorPageContainer__16JPt\"};","import axios from \"axios\";\r\n\r\nexport const fetchMeals = (keyword) => { \r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n      .get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${keyword}`)\r\n      .then((searchRes) => {\r\n        if (searchRes.data.meals) {\r\n          resolve(searchRes.data.meals)\r\n        } else {\r\n          resolve([])\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        reject(error)\r\n      });\r\n    })\r\n}\r\n\r\nexport const getRandomRecipe = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('https://www.themealdb.com/api/json/v1/1/random.php').then(randomRes => {\r\n      resolve(randomRes.data.meals[0])\r\n    }).catch(error => {\r\n      console.log(error)\r\n      reject({})\r\n    })\r\n  })\r\n  \r\n}\r\n\r\nexport const getMealInfoWithId = id => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\r\n        .then((mealRes) => {\r\n          console.log(mealRes.data.meals)\r\n          if (mealRes.data.meals != null) {\r\n            const mealData = mealRes.data.meals[0];\r\n\r\n            const mealDataEntries = Object.entries(mealData);\r\n\r\n            const ingredientQuantities = Object.values(\r\n              mealDataEntries.filter(\r\n                ([key, value]) => key.startsWith(\"strMeasure\") && value !== \"\" && value !== null\r\n              )\r\n            );\r\n\r\n            const ingredientNames = Object.values(\r\n              mealDataEntries.filter(\r\n                ([key, value]) =>\r\n                  key.startsWith(\"strIngredient\") && value !== \"\" && value !== null\r\n              )\r\n            );\r\n\r\n            const ingredients = ingredientNames.map((item, index) => {\r\n              return [item[1], ingredientQuantities[index][1]];\r\n            });\r\n\r\n            resolve([mealData, ingredients]);\r\n          } \r\n          else {\r\n            reject([]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject([]);\r\n        });\r\n    });\r\n}\r\n\r\nexport const fetchUserFavouritesInfo = (userFavourites = []) => {\r\n\r\n  let promiseArray = []\r\n  for (let favouriteItemId of userFavourites) {\r\n        promiseArray.push(axios.get(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${favouriteItemId}`).then(mealRes => mealRes.data.meals[0]))\r\n  }\r\n\r\n  return Promise.all(promiseArray)\r\n\r\n}","import { Card, CardActionArea, CardContent, Paper, Typography, CircularProgress } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getRandomRecipe } from \"../api/Meal\";\r\nimport itemStyles from './RandomRecipeItem.module.css'\r\n\r\nconst RandomRecipeItem = ({ onItemClick = () => {} }) => {\r\n  \r\n  const [randomRecipeInfo, setRandomRecipeInfo] = useState({});\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getRandomRecipe().then(meal => {\r\n      setRandomRecipeInfo(meal)\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  const renderContent = () => {\r\n    if (!loading) {\r\n      return (\r\n        <CardActionArea>\r\n          <CardContent sx={styles.cardContentStyle}>\r\n            <section className={itemStyles.randomRecipeTitleSection}>\r\n              <Typography variant=\"h4\" component=\"p\">\r\n                Featured Recipe: <br /> {randomRecipeInfo.strMeal}\r\n              </Typography>\r\n            </section>\r\n            <section className=\"random-recipe-content\">\r\n              <img\r\n                src={randomRecipeInfo.strMealThumb}\r\n                alt='Picture of random food dish'\r\n                className={itemStyles.randomRecipeImage}\r\n              />\r\n            </section>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      )\r\n    }\r\n    else {\r\n        return <CircularProgress sx={{ paddingTop: 30, paddingBottom: 30 }} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper component={Card} elevation={1} onClick={() => onItemClick(randomRecipeInfo.idMeal)} sx={styles.paperStyle}>\r\n      {renderContent()}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  cardContentStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  paperStyle: {\r\n    display: 'flex', \r\n    flexDirection: 'row', \r\n    justifyContent: 'center', \r\n    borderRadius: 10\r\n  }\r\n}\r\n\r\nexport { RandomRecipeItem }\r\n","import { Card, CardActionArea, CardContent, CardMedia, Typography } from \"@mui/material\"\r\n\r\nconst RecipeItem = ({ item, onItemClick = () => {} }) => {\r\n    return (\r\n        <Card sx={{ width: 200, borderRadius: 10, height: 350 }}  onClick={() => onItemClick()}>\r\n            <CardActionArea sx={{ width: 200, borderRadius: 10, height: 350, display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\r\n                <CardMedia component='img' src={item.strMealThumb} alt={`Picture of ${item.strMeal}`} />\r\n                <CardContent>\r\n                    <Typography textOverflow=\"ellipsis\" variant='h6' component='p'>{item.strMeal}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport { RecipeItem }","import { IconButton, Paper, TextField } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchBar = ({ initialValue = '', onSearchPress = () => {} }) => {\r\n\r\n  const [searchValue, setSearchValue] = useState(initialValue)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    onSearchPress(searchValue)\r\n\r\n  }\r\n    \r\n  return (\r\n    <Paper\r\n      component='form'\r\n      elevation={1}\r\n      onSubmit={handleSubmit}\r\n      sx={{ p: \"5px 4px\", display: \"flex\", alignItems: \"center\", width: \"60%\" }}\r\n    >\r\n      <TextField\r\n        style={{ display: \"flex\", flex: 12 }}\r\n        id=\"search-field\"\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n        placeholder={\"Search for recipes\"}\r\n        value={searchValue}\r\n        onChange={(event) => setSearchValue(event.target.value)}\r\n      />\r\n      <IconButton\r\n        type=\"submit\"\r\n        aria-label=\"search\"\r\n        disabled={searchValue === ''}\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport { SearchBar }","export const PRIMARY_COLOUR = '#ffe4c4'\r\nexport const SECONDARY_COLOUR = '#b3a589'\r\nexport const CONTAINED_DIM_COLOUR = '#736a57'\r\n\r\n\r\nexport const NAME_CHANGE_SUCCESS = 'name-change-success'\r\nexport const NAME_CHANGE_ERROR = 'name-change-error'\r\n\r\nexport const PASSWORD_CHANGE_SUCCESS = 'password-change-success'\r\nexport const PASSWORD_MISMATCH = 'non-matching-passwords'\r\nexport const PASSWORDS_SAME = 'passwords-same'\r\nexport const PASSWORD_CHANGE_ERROR = 'password-change-error'\r\nexport const INVALID_CREDENTIALS = 'credentials-invalid'\r\n\r\nexport const FB_EMAIL_IN_USE = 'auth/email-already-in-use'\r\nexport const FB_WEAK_PASSWORD = 'auth/weak-password'","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAnuLhAlhS5LOWcBRVkffThsWZl4-C_nBA\",\r\n  authDomain: \"juno-react-proj-meal.firebaseapp.com\",\r\n  projectId: \"juno-react-proj-meal\",\r\n  storageBucket: \"juno-react-proj-meal.appspot.com\",\r\n  messagingSenderId: \"1062769252048\",\r\n  appId: \"1:1062769252048:web:8ab64364b18bdc1694b0d5\",\r\n  measurementId: \"G-FPJDK6F56S\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default app","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, EmailAuthProvider, reauthenticateWithCredential, updatePassword, setPersistence } from \"firebase/auth\";\r\nimport { getFirestore, collection, setDoc, doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\r\nimport { PASSWORD_CHANGE_ERROR, PASSWORD_CHANGE_SUCCESS, PASSWORD_MISMATCH, INVALID_CREDENTIALS, NAME_CHANGE_SUCCESS, NAME_CHANGE_ERROR, PASSWORDS_SAME } from \"../Constants\";\r\nimport app from '../firebase'\r\n\r\n\r\nconst db = getFirestore(app)\r\nconst auth = getAuth(app)\r\n\r\n\r\nconst userRef = collection(db, 'users') \r\n\r\nexport const addToFavouriteFBStore = (id) => {\r\n\r\n    const userId = auth.currentUser.uid\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        updateDoc(doc(userRef, userId), {\r\n            favourites: arrayUnion(id)\r\n        }).then(() => resolve()).catch(error => reject(error))\r\n\r\n    })\r\n    \r\n\r\n}\r\n\r\nexport const removeFromFavouriteFBStore = (id) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const userId = auth.currentUser.uid\r\n\r\n        updateDoc(doc(userRef, userId), {\r\n            favourites: arrayRemove(id)\r\n        }).then(() => resolve()).catch(error => reject(error))\r\n\r\n    })\r\n\r\n}\r\n\r\nexport const signUpUser = (email, password, name) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        createUserWithEmailAndPassword(auth, email, password).then(credentials => {\r\n            const user = credentials.user\r\n\r\n            setDoc(doc(userRef, user.uid), {\r\n                name\r\n            }).then(() => {\r\n\r\n                resolve({ username: name, uid: user.uid })\r\n\r\n            }).catch(error => reject(error))\r\n            \r\n        }).catch(error => reject(error))\r\n\r\n    })   \r\n}\r\n\r\nexport const loginUser = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n        signInWithEmailAndPassword(auth, email, password).then(credentials => {\r\n            resolve(credentials) \r\n        }).catch(error => reject(error))\r\n\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        signOut(auth).then(() => {\r\n            resolve()\r\n        }).catch(error => reject(error))\r\n    })\r\n}\r\n\r\nexport const updateFBName = (newName) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const userId = auth.currentUser.uid\r\n\r\n        const userDoc = doc(userRef, userId)\r\n        \r\n\r\n        updateDoc(userDoc, {\r\n            name: newName\r\n        }).then(() => {\r\n            resolve(NAME_CHANGE_SUCCESS)\r\n        }).catch(() => {\r\n            reject(NAME_CHANGE_ERROR)\r\n        })\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const updateFBPassword = (currentPassword, newPassword) => {\r\n\r\n    let currentUser = auth.currentUser\r\n    let credentials = EmailAuthProvider.credential(currentUser.email, currentPassword)\r\n\r\n    return new Promise((resolve, reject) => {\r\n        reauthenticateWithCredential(currentUser, credentials).then(() => {\r\n            if (currentPassword !== newPassword) {\r\n                updatePassword(currentUser, newPassword).then(() => {\r\n                    resolve(PASSWORD_CHANGE_SUCCESS)\r\n                }).catch(() => reject(PASSWORD_CHANGE_ERROR))\r\n\r\n            }\r\n            else {\r\n                reject(PASSWORDS_SAME)\r\n            }\r\n    \r\n        }).catch(() => {\r\n            reject(INVALID_CREDENTIALS)\r\n        })\r\n\r\n    })\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    uid: '',\r\n    userFavourites: [],\r\n    isUserLoggedIn: false\r\n\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        logOnUser: (state) => {\r\n            state.isUserLoggedIn = true\r\n        },\r\n        logOutUser: (state) => {\r\n            state.isUserLoggedIn = false\r\n        },\r\n        setReduxName: (state, action) => {\r\n           state.name = action.payload\r\n        },\r\n        setUserId: (state, action) => {\r\n            state.uid = action.payload\r\n        },\r\n        setUserFavourites: (state, action) => {\r\n            state.userFavourites = action.payload\r\n        },\r\n        clearUserState: () => initialState\r\n    }\r\n})\r\n\r\nexport const { setReduxName, setUserId, setUserFavourites, clearUserState, logOnUser, logOutUser } = userSlice.actions\r\n\r\nexport default userSlice.reducer","import { Home, MenuOutlined } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Link,\r\n  Menu,\r\n  MenuItem,\r\n  Modal,\r\n  TextField,\r\n  Typography,\r\n  Alert,\r\n  AlertTitle,\r\n  Snackbar,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser, logoutUser, signUpUser } from \"../api/User\";\r\nimport { setReduxName, setUserId } from \"../redux/UserSlice\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport { SECONDARY_COLOUR, CONTAINED_DIM_COLOUR, FB_EMAIL_IN_USE, FB_WEAK_PASSWORD } from \"../Constants\";\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation()\r\n\r\n  const [homeButtonVisible, setHomeButtonVisible] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/juno_react_project' || location.pathname === '/') {\r\n      setHomeButtonVisible(false)\r\n    }\r\n    else {\r\n      setHomeButtonVisible(true)\r\n    }\r\n\r\n  }, [location])\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const loggedIn = useSelector((state) => state.user.isUserLoggedIn);\r\n\r\n\r\n  const [showSignupPage, setShowSignupPage] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showSuccessfulSnackbar, setShowSuccessfulSnackbar] = useState(false);\r\n  const [snackbarSuccessMessage, setSnackbarSuccessMessage] = useState('');\r\n\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuAnchorClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const renderDashboardItems = () => {\r\n    if (loggedIn) {\r\n      return (\r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleMenuAnchorClose}\r\n        >\r\n          <MenuItem onClick={() => {\r\n              handleMenuAnchorClose()\r\n              history.push('/profile')\r\n            }}>Profile</MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleMenuAnchorClose();\r\n              history.push(\"/favourites\");\r\n            }}\r\n          >\r\n            My Favourites\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleMenuAnchorClose();\r\n              logoutUser().then(() => {\r\n                history.push(\"/\");\r\n                setSnackbarSuccessMessage('Successfully logged out.')\r\n                setShowSuccessfulSnackbar(true)\r\n                console.log(\"Logged out\");\r\n              });\r\n            }}\r\n          >\r\n            Logout\r\n          </MenuItem>\r\n        </Menu>\r\n      );\r\n    } else {\r\n      return (\r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleMenuAnchorClose}\r\n        >\r\n          <MenuItem\r\n            onClick={() => {\r\n              handleMenuAnchorClose();\r\n              setErrorMessage('')\r\n              setShowLoginModal(true);\r\n            }}\r\n          >\r\n            Login\r\n          </MenuItem>\r\n        </Menu>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderErrorField = () => {\r\n    if (errorMessage !== \"\") {\r\n      return (\r\n        <Alert severity=\"error\" sx={{ marginTop: 2 }}>\r\n          <AlertTitle>Error</AlertTitle>\r\n          {errorMessage}\r\n        </Alert>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = () => {\r\n    setShowLoginModal(false)\r\n    setShowSignupPage(false)\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setShowSuccessfulSnackbar(false)\r\n    setErrorMessage(\"\")\r\n    setSnackbarSuccessMessage(\"\")\r\n  }\r\n\r\n  const handleLogin = event => {\r\n    event.preventDefault()\r\n    if (username !== \"\" && password !== \"\") {\r\n      loginUser(username, password)\r\n        .then(() => {\r\n          setSnackbarSuccessMessage('Logged in.')\r\n          setShowSuccessfulSnackbar(true);\r\n          setUsername(\"\");\r\n          setPassword(\"\");\r\n          setShowLoginModal(false);\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage('Unable to login. Please try again.');\r\n          setSnackbarSuccessMessage(\"\");\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      setErrorMessage(\r\n        \"One or more fields are missing. Please input username and/or password and try again.\"\r\n      );\r\n      setSnackbarSuccessMessage(\"\");\r\n    }\r\n  }\r\n\r\n  const handleSignUp = (event) => {\r\n    event.preventDefault()\r\n    if (username !== \"\" && password !== \"\" && name !== \"\") {\r\n      signUpUser(username, password, name)\r\n        .then((userData) => {\r\n          setSnackbarSuccessMessage(\"Success in creating account. You have been logged in automatically.\");\r\n          setShowSuccessfulSnackbar(true)\r\n          setErrorMessage(\"\");\r\n          setShowLoginModal(false);\r\n          setShowSignupPage(false); \r\n          dispatch(setReduxName(userData.name));\r\n          dispatch(setUserId(userData.uid));\r\n        })\r\n        .catch((error) => {\r\n          setSnackbarSuccessMessage(\"\");\r\n          if (error.code === FB_EMAIL_IN_USE) {\r\n            setErrorMessage('An account associated with this email exists.')\r\n\r\n          }\r\n          else if (error.code === FB_WEAK_PASSWORD) {\r\n            setErrorMessage('You password must be at least 6 characters.')\r\n          }\r\n          else {\r\n            setErrorMessage(error.message);\r\n\r\n          }\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const renderLoginContent = () => {\r\n    if (!loggedIn) {\r\n      if (!showSignupPage) {\r\n        return (\r\n          <Box sx={styles.modalStyle}>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              Login\r\n            </Typography>\r\n              <Box\r\n                sx={{\r\n                  marginTop: 1,\r\n                  alignItems: \"flex-start\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n                component='form'\r\n                onSubmit={handleLogin}\r\n              >\r\n                  <TextField\r\n                    sx={{ marginTop: 4 }}\r\n                    id=\"Email-field\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    value={username}\r\n                    type=\"email\"\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                  />\r\n                  <TextField\r\n                    sx={{ marginTop: 2 }}\r\n                    id=\"password-field\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    value={password}\r\n                    type=\"password\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={styles.containedButtonStyling}\r\n                    variant=\"contained\"\r\n                    id=\"login-button\"\r\n                    disabled={username === '' || password === ''}\r\n                    type='submit'\r\n                  >\r\n                    Login\r\n                  </Button>\r\n              </Box>\r\n\r\n            <Typography variant=\"h6\" component=\"h2\" sx={{ mt: 6 }}>\r\n              Don't have an account? Click{\" \"}\r\n              <Link\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  setShowSignupPage(true);\r\n                  setErrorMessage(\"\");\r\n                  setSnackbarSuccessMessage(\"\");\r\n                }}\r\n              >\r\n                here\r\n              </Link>{\" \"}\r\n              to sign up.\r\n            </Typography>\r\n            {renderErrorField()}\r\n          </Box>\r\n        );\r\n      } else {\r\n        return (\r\n          <Box sx={styles.modalStyle}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" component=\"h2\">\r\n                Sign Up\r\n              </Typography>\r\n              <Button\r\n                variant=\"text\"\r\n                sx={{ color: SECONDARY_COLOUR }}\r\n                onClick={() => {\r\n                  setSnackbarSuccessMessage(\"\");\r\n                  setErrorMessage(\"\");\r\n                  setShowSignupPage(false);\r\n                }}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Box>\r\n              <Box\r\n                sx={{\r\n                  marginTop: 1,\r\n                  alignItems: \"flex-start\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n                component='form'\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <TextField\r\n                  sx={{ marginTop: 4 }}\r\n                  id=\"name-field\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  value={name}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                />\r\n                <TextField\r\n                  sx={{ marginTop: 2 }}\r\n                  id=\"email-field\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  value={username}\r\n                  type=\"email\"\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                />\r\n                <TextField\r\n                  sx={{ marginTop: 2 }}\r\n                  id=\"password-field\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  value={password}\r\n                  type=\"password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n                <Button\r\n                  sx={styles.containedButtonStyling}\r\n                  variant=\"contained\"\r\n                  id=\"login-button\"\r\n                  type='submit'\r\n                  disabled={name === '' || username === '' || password === ''}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                {renderErrorField()}\r\n              </Box>\r\n          </Box>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClick}>\r\n        <MenuOutlined />\r\n      </IconButton>\r\n      {homeButtonVisible && (\r\n        <IconButton onClick={() => history.push(\"/\")}>\r\n          <Home />\r\n        </IconButton>\r\n      )}\r\n      {renderDashboardItems()}\r\n      {!loggedIn && <Modal\r\n          onBackdropClick={handleBackdropClick}\r\n          open={showLoginModal}\r\n          handleMenuAnchorClose={() => setShowLoginModal(false)}\r\n        >\r\n          {renderLoginContent()}\r\n        </Modal>\r\n      }\r\n\r\n      <Snackbar open={showSuccessfulSnackbar} autoHideDuration={4000} onClose={() => {\r\n          setShowSuccessfulSnackbar(false)\r\n          setSnackbarSuccessMessage('')\r\n        }}>\r\n        <Alert severity=\"success\" sx={{ width: '100%' }}>\r\n          {snackbarSuccessMessage}\r\n        </Alert>\r\n\r\n      </Snackbar>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  modalStyle: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"#ffe4c4\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  },\r\n  containedButtonStyling: {\r\n    marginTop: 2,\r\n    backgroundColor: SECONDARY_COLOUR,\r\n    \":hover\": {\r\n      backgroundColor: CONTAINED_DIM_COLOUR,\r\n    },\r\n  },\r\n};\r\n\r\nexport { Dashboard };\r\n","import { Favorite } from \"@mui/icons-material\";\r\nimport { Card, CardActionArea, CardMedia, CardContent, Typography, IconButton } from \"@mui/material\";\r\n\r\nconst FavouriteItem = ({ item, onPress =  () => {}, removeFromFavourite = () => {} }) => {\r\n    return (\r\n        <Card key={item.mealId} sx={{ width:  250, height: 350 }}>\r\n            <CardActionArea onClick={() => onPress()} >\r\n                <CardContent sx={{ display: 'flex', flexDirection : 'column'  }}>\r\n                    <CardMedia component='img' src={item.strMealThumb} alt={`Picture of ${item.strMeal}`} />\r\n                    <CardContent sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '100%' }}>\r\n                        <Typography>{item.strMeal}</Typography>\r\n                        <IconButton sx={{ marginLeft: 5 }} onClick={event => removeFromFavourite(event)}>\r\n                            <Favorite sx={{ color: 'pink' }} />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                    \r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport { FavouriteItem }","import { Helmet } from \"react-helmet\"\r\n\r\nconst LoadingHelmet = () => {\r\n    return (\r\n        <Helmet>\r\n            <title>Loading...</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport { LoadingHelmet }","import React, { Component } from 'react'\r\nimport { Grid } from '@mui/material';\r\nimport { SearchBar, RandomRecipeItem } from '../Components';\r\nimport mainStyles from './Main.module.css'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)        \r\n    }\r\n\r\n    renderHelmet(){\r\n        return (\r\n            <Helmet>\r\n                <title>Home | The Recipe Archive</title>\r\n            </Helmet>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={mainStyles.mainContainer}>\r\n                {this.renderHelmet()}\r\n                <Grid container spacing={1} width='80%' justifyContent='center' direction=\"column\">\r\n                    <Grid item sx={styles.itemStyle}>\r\n                        <h1>The Recipe Archive</h1>\r\n                    </Grid>\r\n                    <Grid item sx={styles.itemStyle}>\r\n                        {/* Search bar */}\r\n                        <SearchBar onSearchPress={value => {\r\n                            this.props.history.push(`/search?keyword=${value}`)\r\n                        }}/>\r\n                    </Grid>\r\n                    <Grid item sx={styles.lowerItemStyling}>\r\n                        {/* Random featured recipe */}\r\n                        <RandomRecipeItem onItemClick={id => this.props.history.push(`/meal?id=${id}`)} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    itemStyle: {\r\n        display: 'flex', \r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    lowerItemStyling: {\r\n        paddingBottom: 20\r\n    }\r\n}\r\n\r\nexport default Main","import { Grid, Typography, CircularProgress } from '@mui/material'\r\nimport { Component } from 'react'\r\nimport { fetchMeals } from '../api/Meal';\r\nimport { LoadingHelmet, RecipeItem, SearchBar } from '../Components'\r\nimport { Helmet } from 'react-helmet'\r\nimport styles from './SearchResults.module.css'\r\n\r\n\r\nclass SearchResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      resultsLoading: false,\r\n      searchResults: [],\r\n      loading: true\r\n    };\r\n  }\r\n\r\n  fetchQuery(keyword) {\r\n    fetchMeals(keyword).then(mealResults => {\r\n      this.setState({ searchResults: mealResults, loading: false });\r\n    }).catch(() => {\r\n      this.setState({ searchResults: [], loading: false });\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlParams = new URLSearchParams(this.props.location.search);\r\n    const keyword = urlParams.get(\"keyword\");\r\n    this.fetchQuery(keyword)\r\n    this.keyword = keyword\r\n    \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.location.search !== this.props.location.search) {\r\n\r\n        const urlParams = new URLSearchParams(this.props.location.search);\r\n        const keyword = urlParams.get(\"keyword\");\r\n        this.fetchQuery(keyword)\r\n\r\n        this.keyword = keyword\r\n    }\r\n  }\r\n\r\n  renderResultsHelmet() {\r\n    return (\r\n      <Helmet>\r\n        <title>Search results for {this.keyword} | The Recipe Archive</title>\r\n      </Helmet>\r\n    )\r\n  }\r\n\r\n  renderContent() {\r\n      if (this.state.loading) {\r\n        return (\r\n          <div\r\n            className={styles.searchResultsLoadingContainer}>\r\n                <LoadingHelmet />\r\n                <CircularProgress />\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n            <div className={styles.searchResultsContainer}>\r\n              {this.renderResultsHelmet()}\r\n              <Grid container display=\"flex\" alignItems=\"center\" direction=\"column\">\r\n                <Grid item container direction='column' alignItems='center'>\r\n                  <SearchBar initialValue={this.keyword} onSearchPress={value => {\r\n                      console.log(\"Outer value: \", value)\r\n                      this.props.history.push(`/search?keyword=${value}`)\r\n                    }} />\r\n                  <Typography sx={{ marginTop: 10 }}>\r\n                    There are{\" \"}\r\n                    {this.state.searchResults ? this.state.searchResults.length : 0}{\" \"}\r\n                    results\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  marginTop={10}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                  width=\"60%\"\r\n                >\r\n                  {this.state.searchResults.map((searchResultItem) => {\r\n                    return (\r\n                      <Grid item paddingRight={2} paddingBottom={2} borderRadius={5}  key={searchResultItem.idMeal}>\r\n                        <RecipeItem\r\n                          item={searchResultItem}\r\n                          onItemClick={() => {\r\n                            console.log(\"Clicked\");\r\n                            this.props.history.push(\r\n                              `/meal?id=${searchResultItem.idMeal}`\r\n                            );\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          );\r\n\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return this.renderContent()   \r\n  }\r\n}\r\n\r\nexport default SearchResults","import { Favorite, FavoriteOutlined } from \"@mui/icons-material\";\r\nimport { CircularProgress, Grid, IconButton } from \"@mui/material\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMealInfoWithId } from \"../api/Meal\";\r\nimport { addToFavouriteFBStore, removeFromFavouriteFBStore } from \"../api/User\";\r\nimport _ from 'lodash'\r\nimport styles from './MealInfo.module.css'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { LoadingHelmet } from \"../Components\";\r\n\r\nclass MealInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mealInfo: {},\r\n      mealIngredients: [],\r\n      isFavourited: false,\r\n      loading: false\r\n    };\r\n\r\n    this.addToFavourite = this.addToFavourite.bind(this)\r\n    this.removeFromFavourite = this.removeFromFavourite.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlParams = new URLSearchParams(this.props.location.search);\r\n\r\n    this.id = urlParams.get(\"id\");\r\n\r\n    this.setState({ loading: true })\r\n\r\n    getMealInfoWithId(this.id).then(([mealData, ingredients]) => {\r\n      this.setState({ mealInfo: mealData, mealIngredients: ingredients, loading: false })\r\n    }).catch(() => this.setState({ mealInfo: [], mealIngredients: [], loading: false }))\r\n\r\n  }\r\n\r\n  renderIngredients(ingredients = []) {\r\n    if (ingredients && Array.isArray(ingredients) && ingredients.length > 0) {\r\n      return (\r\n        <ul>\r\n          {ingredients.map(([name, quantity]) => {\r\n            return (\r\n              <li key={`${name}${quantity}`}>\r\n                {quantity} - {name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderSteps() {\r\n\r\n    if (this.state.mealInfo.strInstructions !== undefined) {\r\n      const stepsAsString = JSON.stringify(this.state.mealInfo.strInstructions)\r\n      const steps = stepsAsString.substring(1, stepsAsString.length - 1).split('\\\\r\\\\n').filter(item => item !== '' && !item.includes('STEP '))\r\n\r\n      return steps.map((item, index) => {\r\n        return <p key={index}>{index + 1}. {item}</p>        \r\n      });\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  addToFavourite() {\r\n    const mealId = this.state.mealInfo.idMeal\r\n\r\n    addToFavouriteFBStore(mealId).then(() => {\r\n      this.setState({ isFavourited: true })\r\n    })\r\n\r\n\r\n  }\r\n\r\n  removeFromFavourite() {\r\n    const mealId = this.state.mealInfo.idMeal\r\n\r\n    removeFromFavouriteFBStore(mealId).then(() => {\r\n      this.setState({ isFavourited: false })\r\n    })\r\n  }\r\n\r\n  renderFavouriteButton() {\r\n    const mealId = this.state.mealInfo.idMeal\r\n\r\n    if (this.props.userFavourites.includes(mealId)) {\r\n      return (\r\n        <IconButton disabled={!this.props.isUserLoggedIn} onClick={this.removeFromFavourite}>\r\n          <Favorite sx={{ color: 'pink' }} />\r\n        </IconButton>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <IconButton disabled={!this.props.isUserLoggedIn} onClick={this.addToFavourite}>\r\n          <FavoriteOutlined  sx={{ color: 'none' }}/>\r\n        </IconButton>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderMealHelmet() {\r\n    return (\r\n      <Helmet>\r\n        <title>{this.state.mealInfo.strMeal} | The Recipe Archive</title>\r\n      </Helmet>\r\n    )\r\n  }\r\n\r\n  renderNoMealHelmet() {\r\n    return (\r\n      <Helmet>\r\n        <title>Meal not found | The Recipe Archive</title>\r\n      </Helmet>\r\n    )\r\n  }\r\n\r\n  renderContent() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className={styles.mealInfoLoadingContainer}>\r\n              <LoadingHelmet />\r\n              <CircularProgress />\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      console.log(this.state.mealInfo)\r\n      if (!(_.isEmpty(this.state.mealInfo))) {\r\n        return (\r\n          <div className={styles.outerMealInfoContainer}>\r\n            {this.renderMealHelmet()}\r\n            <Grid container display=\"flex\" alignItems=\"center\" direction=\"column\" width='80%'>\r\n              <Grid item>\r\n                <img\r\n                  src={this.state.mealInfo.strMealThumb}\r\n                  alt={`Picture of ${this.state.mealInfo.strMeal}`}\r\n                  style={{\r\n                    borderRadius: 20,\r\n                    height: \"100%\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item sx={{ paddingBottom: 20, marginTop: 10 }}>\r\n                <div className={styles.upperSectionMealContent}>\r\n                    <h2>{this.state.mealInfo.strMeal}</h2>\r\n                    {this.renderFavouriteButton()}\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <h6>Ingredients</h6>\r\n                    {this.renderIngredients(this.state.mealIngredients)}\r\n                  </div>\r\n                  <div>\r\n                    <h6>Steps</h6>\r\n                    {this.renderSteps()}\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <div className={styles.outerMealInfoNoContentContainer}>\r\n            {this.renderNoMealHelmet()}\r\n            <h1>\r\n              The meal with the associated id {this.id} does not exist.\r\n            </h1>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return this.renderContent()\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { userFavourites, isUserLoggedIn } = state.user\r\n\r\n  return { userFavourites, isUserLoggedIn }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(MealInfo);\r\n","import { CircularProgress, Grid } from '@mui/material';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchUserFavouritesInfo } from '../api/Meal';\r\nimport { removeFromFavouriteFBStore } from \"../api/User\";\r\nimport { FavouriteItem, LoadingHelmet } from '../Components'\r\nimport styles from './MyFavourites.module.css'\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\n\r\nclass MyFavourites extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          localFavouriteList: [],\r\n          loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      let authLocal = localStorage.getItem('authUser')\r\n      if (!authLocal) {\r\n        this.props.history.push('/')\r\n      }\r\n\r\n      this.setState({ loading: true })\r\n    \r\n      fetchUserFavouritesInfo(this.props.userFavourites || []).then(favouritesInfo => {\r\n        this.setState({ localFavouriteList: (favouritesInfo.length > 0) ? favouritesInfo : [], loading: false })\r\n      })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.userFavourites.length !== this.props.userFavourites.length) {\r\n        this.setState({ loading: true })\r\n        fetchUserFavouritesInfo(this.props.userFavourites || []).then(favouritesInfo => {\r\n          this.setState({ localFavouriteList: (favouritesInfo.length > 0) ? favouritesInfo : [], loading: false })\r\n        })\r\n      }\r\n    }\r\n\r\n    renderFavouriteHelmet() {\r\n      return (\r\n        <Helmet>\r\n          <title>My Favourites</title>\r\n        </Helmet>\r\n      )\r\n    }\r\n\r\n    renderFavouriteContent() {\r\n\r\n      if (!this.state.loading) {\r\n        if (this.state.localFavouriteList.length > 0) {\r\n          return (\r\n            <div className={styles.favouritesOuterContainer}>\r\n                  {this.renderFavouriteHelmet()}\r\n                  <h1>My Favourites</h1>\r\n                  <Grid container display=\"flex\" direction=\"row\" width='80%' marginTop={3}>\r\n                    {\r\n                      this.state.localFavouriteList.map(favouriteItem => {\r\n                        console.log(Object.keys(favouriteItem))\r\n                        return (\r\n                          <Grid\r\n                            item\r\n                            key={favouriteItem.strMeal}\r\n                            paddingRight={3}\r\n                            paddingBottom={3}\r\n\r\n                          >\r\n                            <FavouriteItem\r\n                              item={favouriteItem}\r\n                              onPress={() =>\r\n                                this.props.history.push(\r\n                                  `/meal?id=${favouriteItem.idMeal}`\r\n                                )\r\n                              }\r\n                              removeFromFavourite={(event) => {\r\n                                event.stopPropagation();\r\n                                removeFromFavouriteFBStore(\r\n                                  favouriteItem.idMeal\r\n                                );\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        );\r\n                        \r\n  \r\n                        })\r\n                    }\r\n                  </Grid>\r\n            </div>\r\n          )\r\n        }\r\n        else {\r\n          return (\r\n            <div className={styles.noFavouritesOuterContainer}>\r\n                {this.renderFavouriteHelmet()}\r\n                <h3>You appear to have no favourites. Search for recipes and add them to your favourites to view them here.</h3> \r\n              </div>\r\n          )\r\n        }\r\n      }\r\n      else {\r\n        return (\r\n          <div className={styles.favouritesLoadingContainer}>\r\n            <LoadingHelmet />\r\n            <CircularProgress />\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    render() {\r\n        return this.renderFavouriteContent()\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { userFavourites, isUserLoggedIn } = state.user\r\n\r\n    return { userFavourites, isUserLoggedIn }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MyFavourites)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Typography, TextField, Button, Alert, AlertTitle } from '@mui/material'\r\nimport { INVALID_CREDENTIALS, NAME_CHANGE_ERROR, NAME_CHANGE_SUCCESS ,PASSWORDS_SAME,PASSWORD_CHANGE_SUCCESS, PASSWORD_MISMATCH, SECONDARY_COLOUR } from '../Constants'\r\nimport { updateFBName, updateFBPassword } from '../api/User'\r\nimport { Helmet } from 'react-helmet'\r\nimport styles from './Profile.module.css'\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            enteredName: this.props.name,\r\n            currentPassword: '',\r\n            newPassword: '',\r\n            confirmNewPassword: '',\r\n            errorMessage: '',\r\n            successMessage: ''\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let authLocal = localStorage.getItem('authUser')\r\n        if (!authLocal) {\r\n            this.props.history.push('/')\r\n        }    \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.name !== this.props.name) {\r\n            this.setState({ enteredName: this.props.name })\r\n        }\r\n    }\r\n\r\n    renderSuccessAlert() {\r\n        if (this.state.successMessage.length > 0) {\r\n            return (\r\n                <Alert severity=\"success\" sx={{ marginTop: 2 }}>\r\n                    <AlertTitle>Success</AlertTitle>\r\n                    {this.state.successMessage}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderHelmet() {\r\n        return (\r\n            <Helmet>\r\n                <title>Profile | The Recipe Archive</title>\r\n            </Helmet>\r\n        )\r\n    }\r\n\r\n    renderErrorAlert() {\r\n        if (this.state.errorMessage.length > 0) {\r\n            return (\r\n                <Alert severity=\"error\" sx={{ marginTop: 2 }}>\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    {this.state.errorMessage}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.setState({ errorMessage: '', successMessage: '' })\r\n\r\n        let promiseArray = []\r\n\r\n        if (this.state.enteredName !== this.props.name) {\r\n            promiseArray.push(updateFBName(this.state.enteredName).then(res => {\r\n                if (res === NAME_CHANGE_SUCCESS) {\r\n                    return 'Successfully changed name associated with account.'\r\n                }\r\n\r\n            }))\r\n        }\r\n\r\n        if (this.state.currentPassword !== '' && this.state.newPassword !== '' && this.state.confirmNewPassword !== '') {\r\n            if (this.state.newPassword === this.state.confirmNewPassword) {\r\n                promiseArray.push(updateFBPassword(this.state.currentPassword, this.state.newPassword).then(res => {\r\n                    let successMessage = ''\r\n                    if (res === PASSWORD_CHANGE_SUCCESS) {\r\n                        successMessage = 'Your password has been successfully changed.'\r\n                    }\r\n                    \r\n                    return successMessage\r\n                }))\r\n            }\r\n        }\r\n\r\n\r\n        if (promiseArray.length > 0) {\r\n          Promise.allSettled(promiseArray)\r\n            .then(res => {\r\n                let tempSuccessMessage = ''\r\n                let tempErrorMessage = ''\r\n                \r\n                if (res.length > 0) {\r\n                    res.forEach(item => {\r\n                        console.log(item)\r\n                        if (item.status === 'fulfilled') {\r\n                            tempSuccessMessage += `${item.value} `\r\n                        }\r\n                        else {\r\n                            if (item.value === NAME_CHANGE_ERROR) {\r\n                                tempErrorMessage += 'Unable to change name. Please try again.'\r\n\r\n                            }\r\n                            \r\n                            if (item.value === INVALID_CREDENTIALS) {\r\n                                tempErrorMessage += 'The entered information is not present in our records. Please try again.'\r\n                \r\n                            }\r\n                            else if (item.value === PASSWORDS_SAME) {\r\n                                tempErrorMessage += 'The entered passwords (old and new) are the same. Please try again.'\r\n                \r\n                            }\r\n                            else {\r\n                                tempErrorMessage = 'There appears to be an internal error. Please refresh the app and try again.'\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n                this.setState({ currentPassword: '', newPassword: '', confirmNewPassword: '', successMessage: tempSuccessMessage, errorMessage: tempErrorMessage })\r\n            })\r\n            \r\n        }\r\n        else {\r\n            if (this.state.newPassword !== this.state.confirmNewPassword) {\r\n                this.setState({ errorMessage: 'The passwords do not match. Please try again.' })\r\n            }\r\n            else {\r\n                this.setState({ errorMessage: 'No information has been changed. Please try again.' })\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.outerProfileContainer}>\r\n                {this.renderHelmet()}\r\n                <Grid container width=\"60%\"  borderRadius={10} border={`2px solid ${SECONDARY_COLOUR}`} direction='column' padding={5}>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <Grid container item direction='column'>\r\n                            <h4>Name</h4>\r\n                            <TextField value={this.state.enteredName} onChange={event => this.setState({ enteredName: event.target.value })} />\r\n                        </Grid>\r\n                        <Grid container item direction='column'>\r\n                            <h4>Password</h4>\r\n                            <TextField type='password' sx={{ paddingBottom: 2 }} value={this.state.currentPassword} onChange={event => this.setState({ currentPassword: event.target.value })} label='Current Password' />\r\n                            <TextField type='password' sx={{ paddingBottom: 2 }} value={this.state.newPassword} onChange={event => this.setState({ newPassword: event.target.value })} label='New Password' />\r\n                            <TextField type='password' sx={{ paddingBottom: 2 }} value={this.state.confirmNewPassword} onChange={event => this.setState({ confirmNewPassword: event.target.value })} label='Confirm New Password' />\r\n                        </Grid>\r\n                        <Button type='submit' variant='contained'>Apply</Button>\r\n                    </form>\r\n                    {this.renderErrorAlert()}\r\n                    {this.renderSuccessAlert()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { name, isUserLoggedIn } = state.user\r\n    return { name, isUserLoggedIn }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile)","import { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styles from './ErrorPage.module.css'\r\n\r\nclass ErrorPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    renderHelmet() {\r\n        return (\r\n            <Helmet>\r\n                <title>Error | The Recipe Archive</title>\r\n            </Helmet>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.errorPageContainer}>\r\n                {this.renderHelmet()}\r\n                <h1>It appears that the page you are looking for does not exist. Please try again.</h1>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default ErrorPage","import { Route, Switch } from 'react-router';\nimport Main from './Views/Main';\nimport SearchResults from './Views/SearchResults';\nimport MealInfo from './Views/MealInfo';\nimport { Dashboard } from './Components';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth'\nimport { getFirestore, onSnapshot, doc } from 'firebase/firestore';\nimport { useEffect, useState } from 'react';\nimport app from './firebase';\nimport { clearUserState, logOnUser, setReduxName, setUserFavourites, setUserId } from './redux/UserSlice';\nimport MyFavourites from './Views/MyFavourites';\nimport Profile from './Views/Profile';\nimport { useDispatch } from 'react-redux';\nimport ErrorPage from './Views/ErrorPage';\n\n\nconst AppRoute = ({ exact, path, component: Component }) => {\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(props) => (\n        <div>\n          <Dashboard history={props.history} />\n          <Component {...props} />\n        </div>\n      )}\n    />\n  )\n}\n\n\nfunction App() {\n  const auth = getAuth(app)\n  const db = getFirestore(app)\n\n  const [authUser, setAuthUser] = useState(null)\n\n  const dispatch = useDispatch()\n\n\n  //Auth user listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user && !user.isAnonymous) {\n        localStorage.setItem('authUser', user)\n        dispatch(setUserId(user.uid))\n        dispatch(logOnUser())\n      }\n      else {\n        localStorage.removeItem('authUser')\n        dispatch(clearUserState())\n      }\n      setAuthUser(user)\n    })\n\n    return () => unsubscribe()\n\n  }, [])\n\n\n  //User info listener\n  useEffect(() => {\n\n    if (authUser && !authUser.isAnonymous) {\n\n      const userSubscribe = onSnapshot(doc(db, 'users', authUser.uid), userData => {\n        if (userData.exists()) {\n          dispatch(setReduxName(userData.data().name))\n          dispatch(setUserFavourites(userData.data().favourites || []))\n        }\n      })\n\n      return () => userSubscribe()\n    }\n    else {\n      return\n    }\n\n  }, [authUser])\n\n\n\n  return (\n    <Switch>\n      <AppRoute path='/search' component={SearchResults} />\n      <AppRoute path='/meal' component={MealInfo} />\n      <AppRoute path='/favourites' component={MyFavourites} />\n      <AppRoute path='/profile' component={Profile} />\n      <AppRoute exact path=\"/\" component={Main} />\n      <AppRoute component={ErrorPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from './redux/UserSlice'\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename='/juno_react_project'>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mealInfoLoadingContainer\":\"MealInfo_mealInfoLoadingContainer__pmbpy\",\"outerMealInfoContainer\":\"MealInfo_outerMealInfoContainer__306Im\",\"outerMealInfoNoContentContainer\":\"MealInfo_outerMealInfoNoContentContainer__-cg8X\",\"upperSectionMealContent\":\"MealInfo_upperSectionMealContent__TAj6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favouritesLoadingContainer\":\"MyFavourites_favouritesLoadingContainer__2ezSh\",\"favouritesOuterContainer\":\"MyFavourites_favouritesOuterContainer__2NNUb\",\"noFavouritesOuterContainer\":\"MyFavourites_noFavouritesOuterContainer__WZR1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"randomRecipeTitleSection\":\"RandomRecipeItem_randomRecipeTitleSection__4vf6H\",\"randomRecipeImage\":\"RandomRecipeItem_randomRecipeImage__3bRNc\"};"],"sourceRoot":""}